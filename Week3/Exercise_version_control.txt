# 1. Install Git; 

git version 2.37.0 (Apple Git-136)


# 2. Create an account on Github (or use an existing if you want); 

Jaspacito(aynfjz@hotmail.com) 


# 3. Set up a local repository in your project folder; 

/Users/Jasper 


# 4. Create folder homework/week3; 

mkdir /Users/Jasper/homework/ 
mkdir /Users/Jasper/homework/week3/ 
cd /Users/Jasper/homework/week3/ && pwd 
pwd 


# 5. Within it, create the following two folders and two files: 
#    data/
#    text/
#    notes.txt
#    functions.py
# and exclude folder data/ from being tracked; 

# create folders 
mkdir /Users/Jasper/homework/week3/data/ 
mkdir /Users/Jasper/homework/week3/text/ 

# create foles 
echo '' > notes.txt 
echo '' > functions.py 

# exclude folder from being tracked 
## create .gitignore file 
touch .gitignore 
## add file paths to be excluded from tracked 
vi .gitignore 
/Users/Jasper/homework/week3/data/ 


# 1. Add and commit everything; 

# initialize 
git init 

# commit everything 
git add . 
git commit -m "initial commit of everything" 
git log 


# 2. Add line reading 'THIS IS FINE' to notes.txt, commit the new version with message 'a fine change'; 

# add text 
vi notes.txt 
i 
THIS IS FINE 
esc 
:wq 

# commit the new version 
git add notes.txt 
git commit -m "a fine change" 


# 3. Change that line to 'THIS IS GOOD', commit the new version with message 'a good change' overwriting the previous commit as if it never happened (make sure git log does not show 'a fine change'); 

# change file 
vi notes.txt 
i 
THIS IS GOOD 
esc 
:wq 

# commit the new version and overwrite previous commit 
git add notes.txt 
git commit --amend -m "a good change" 
git log # check log 


# 4. Change that line to 'THIS IS BAD', save the file and close the editor to make it impossible to use Ctrl+Z; 

done by local text editor 


# 5. Try to restore notes.txt to the state where it reads 'THIS IS GOOD'; 

git log 
git checkout 1b5fe4ded334d7358223253a3760c1fc2d3f9f12 notes.txt # change SHA 


# 6. Change that line to 'THIS IS THE BEST' and delete file functions.py, commit your changes giving your commit a name such as 'first-working'; 

# change file 
vi notes.txt 
i 
THIS IS THE BEST 
esc 
:wq 

# delete file 
rm /Users/Jasper/homework/week3/functions.py 

# commit changes 
git add . 
git commit -m "changes of two files" 

# give commit a name 
git log 
git tag first-working 385a672783cd31d2b3fb62dbd517915399fe46bb # change SHA 
git tag -n # check tags 


# 7. Undo the previous commit using git revert, makes sure functions.py does exist and the line reads 'THIS IS GOOD'; 

git log 
git revert 385a672783cd31d2b3fb62dbd517915399fe46bb # change SHA 


# 8. Create a remote repo on Github/Bitbucket and link your local repo to it; 

# remote repo on GitHub 
https://github.com/Jaspacito/homework-week3.git 

# link local repo 
git remote add origin https://github.com/Jaspacito/homework-week3.git 


# 9. Push all the commits to the remote; 

git branch -M main 
git push -u origin main 


# 10. Try to revert notes.txt to the state where it reads 'THIS IS FINE' keeping all the other changes in place; 

git checkout 1b5fe4ded334d7358223253a3760c1fc2d3f9f12 notes.txt # change SHA 


# 11. Commit everything pending and push to the remote; 

# commit everything 
git add . 
git commit 

# push to the remote 
git branch -M main 
git push -u origin main 


# 12. Commit and push the previous homework. 

# commit homeworks after week6 

